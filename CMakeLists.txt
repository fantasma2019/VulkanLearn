# this is the build file for project VulkanRenderer
# it is autogenerated by the xmake build system.
# do not edit by hand.

# project
cmake_minimum_required(VERSION 3.15.0)
cmake_policy(SET CMP0091 NEW)
project(VulkanRenderer LANGUAGES CXX)

# target
add_executable(VulkanRenderer ""
        Source/Vulkan/VulkanRenderer.cpp
        Source/Vulkan/VulkanRenderer.h
        Source/Vulkan/VulkanRenderPass.cpp
        Source/Vulkan/VulkanRenderPass.h)
set_target_properties(VulkanRenderer PROPERTIES OUTPUT_NAME "VulkanRenderer")
set_target_properties(VulkanRenderer PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
target_precompile_headers(VulkanRenderer PRIVATE
    $<$<COMPILE_LANGUAGE:CXX>:${CMAKE_CURRENT_SOURCE_DIR}/build/.gens/VulkanRenderer/windows/x64/debug/Source/Vulkan/vkpch.h>
)
target_include_directories(VulkanRenderer PRIVATE
    Source/ThirdParty/VulkanSDK/include
    Source/ThirdParty
)
target_include_directories(VulkanRenderer SYSTEM PRIVATE
    C:/Users/Administrator/AppData/Local/.xmake/packages/s/spdlog/v1.15.0/1b3bf62e23e242dea2182406def4130f/include
    C:/Users/Administrator/AppData/Local/.xmake/packages/g/glm/1.0.1/a2eb08b6b8134255a6ae43c14de1bf8d/include
    C:/Users/Administrator/AppData/Local/.xmake/packages/g/glfw/3.3.8/5aa939de69104b4e80d43709f8b47425/include
)
target_compile_definitions(VulkanRenderer PRIVATE
    DEBUG
    GLFW_INCLUDE_NONE
)
target_compile_options(VulkanRenderer PRIVATE
    $<$<COMPILE_LANGUAGE:CXX>:/utf-8>
    $<$<COMPILE_LANGUAGE:CUDA>:-G>
)
if(MSVC)
    target_compile_options(VulkanRenderer PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(VulkanRenderer PRIVATE -fexceptions)
    target_compile_options(VulkanRenderer PRIVATE -fcxx-exceptions)
elseif(Gcc)
    target_compile_options(VulkanRenderer PRIVATE -fexceptions)
endif()
set_target_properties(VulkanRenderer PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(VulkanRenderer PRIVATE cxx_std_20)
if(MSVC)
    target_compile_options(VulkanRenderer PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(VulkanRenderer PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(VulkanRenderer PRIVATE -Zi)
else()
    target_compile_options(VulkanRenderer PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET VulkanRenderer PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(VulkanRenderer PRIVATE
    glfw3
    opengl32
    user32
    shell32
    gdi32
)
target_link_directories(VulkanRenderer PRIVATE
    Source/ThirdParty/VulkanSDK/Lib
    C:/Users/Administrator/AppData/Local/.xmake/packages/g/glfw/3.3.8/5aa939de69104b4e80d43709f8b47425/lib
)
target_sources(VulkanRenderer PRIVATE
    Source/Vulkan/Vulkan.cpp
    Source/Vulkan/VulkanContext.cpp
    Source/Vulkan/VulkanWindow.cpp
    Source/main.cpp
    Source/stb_image.cpp
    Source/Vulkan/BaseType.h
    Source/Vulkan/vkpch.h
    Source/Vulkan/Vulkan.h
    Source/Vulkan/VulkanContext.h
    Source/Vulkan/VulkanWindow.h
)
